<!-- /snippets/product-grid-item.liquid -->
{% comment %}

  This snippet is used to showcase each product during the loop,
  'for product in collection.products' in collection.liquid.

  A liquid variable (grid_item_width) is set just before the this
  snippet is included to change the size of the container.
  Once the variable is set on a page, all future instances of this
  snippet will use that width. Overwrite the variable to adjust this.

  Example
    - assign grid_item_width = 'large--one-quarter medium--one-half'

{% endcomment %}

{% comment %}
  Set the default grid_item_width if no variable is set
{% endcomment %}
{% unless grid_item_width %}
  {% assign grid_item_width = 'large--one-third medium--one-half' %}
{% endunless %}

{% comment %}
  Check if the product is on sale and set a variable to be used below.
{% endcomment %}
{% assign on_sale = false %}
{% if product.compare_at_price > product.price %}
  {% assign on_sale = true %}
{% endif %}

{% comment %}
  Check if the product is sold out and set a variable to be used below.
{% endcomment %}
{% assign sold_out = true %}
{% if product.available %}
  {% assign sold_out = false %}
{% endif %}


{% comment %}
customer can manage sale button design

{% endcomment %}


 {% if settings.sale_button_option == "sale_button_option_one" %}
    
       {% assign sale_box_opt = "sale_wheel" %}
    
      {% elsif settings.sale_button_option == "sale_button_option_two" %}
        
    {% assign sale_box_opt = "sale_wheel-two" %}
    
      {% elsif settings.sale_button_option == "sale_button_option_three" %}

    {% assign sale_box_opt = "sale_wheel-three" %}
   
        {% elsif settings.sale_button_option == "sale_button_option_four" %}

    {% assign sale_box_opt = "sale_wheel-four" %}
    
    
    {% endif %} 




<div class="item grid__item {{ grid_item_width }}">

  {% comment %}
    Link to your product with the 'within: collection' filter for the link to be aware of the collection.
    This allows you to create collection-based navigation on the product page.

    Results of using 'within: collection':
    - Instead of a URL with /products/product-handle
      you would get /collections/collection-handle/products/product-handle

    For more info on navigation within a collection
      - http://docs.shopify.com/support/your-store/collections/how-to-navigate-within-a-collection

  
  
  
  {% endcomment %}
  <a href="{{ product.url | within: collection }}" class="grid__image">
   {% include "image_setting" %}
  </a>

  
   <p class="nav-bar mobile_nav h5">
  
            {% if settings.on_mobile_title_set == "on_mobile_title_set_line_one" %}
  
     {% assign setClimit=settings.cat_page_text_limit %}
     <a href="{{ product.url | within: collection }}"> {{ product.title |  truncate:setClimit  }}</a>
            {% else %}
               <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
            {% endif %}
  </p>
  
  <p class="nav-bar desktop_nav h5">
    <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
  </p>
  
  
  
  
  
  <!--p class="h5">
    <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
  </p-->
  
  <div class="sale_box_cat">
 
  <!-- product price setting for variant or normal -->
      {% include 'product_price_setting' %}  

  </div>
</div>
